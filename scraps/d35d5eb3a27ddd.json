{
  "title": "React（Next.js）でアプリケーションを書いての様々",
  "closed": true,
  "archived": false,
  "created_at": "2021-10-02",
  "comments": [
    {
      "author": "hctaw_srp",
      "created_at": "2021-10-02",
      "body_markdown": "React（Next.js + TypeScript）でアプリケーションを書きつつ、入門をしたので、様々メモ"
    },
    {
      "author": "hctaw_srp",
      "created_at": "2021-10-02",
      "body_markdown": "# サマリ\n\n- Vueの方がスッキリしているので、入り口のハードルはVueで書く方が低いイメージ\n- 環境構築等の導入フェーズもVueの方がサポートが手厚く、React側はいくらか開発者でカスタマイズに注力する必要がある\n- ディレクトリ構造等、大きなパターンは割と自由にやらせてくれるが、TypeScriptサポートがナイスなので、セーフティに書けそうなイメージ\n- JSX、CSS in JS等のポリシーは、正直ビュー・ロジックのモノリシックデザイン化を助長する点でも、あんまりしっくり来ない\n\t- でも、DynamicなWEBアプリケーションが主体な昨今で、ビュー・ロジックを分離させる意味がどこまであるのか、と言う点は、一度立ち止まって検討しても良いかもしれない\n\t- しっくり来ないと言いつつも、書くこと自体のストレスはあんまり無かった\n- Reactのコンポーネント作り、とても楽、、functionを書くノリでサクッと書けることは感動\n- Vueも3からサポートが入るらしいが、React Hookがとても良い。stateのストレスがこれでめちゃくちゃ軽減\n- 大きなアプリケーションを作る場合、Reactの方が良さそう。Vueは手軽に、よしなに、な具合なので、小物をサクッと作る上でのメリットが大きいのかも"
    },
    {
      "author": "hctaw_srp",
      "created_at": "2021-10-02",
      "body_markdown": "> DynamicなWEBアプリケーションが主体な昨今で、ビュー・ロジックを分離させる意味がどこまであるのか\n\nReactを書いて、一番どうあるべきかなー、と悩んだ点。現実として、美しく分離されても、あんまりうれしいシーンが無いのでは、、デザイナーサイドにCSSを書くにしても、おそらくReactを介して生成されたHTMLを渡すなりして、それに当て込んでくれ、のフローになるので、実装する物自体の分離性がうれしいシーンがイメージしきれなかった。\n\nそう考えると、Vueの見通しの良さよりも、Reactの\n\n- コンポーネント作りが楽\n- React Hookでstateをコンポーネントに閉じ込めるのが楽\n\nの様な、ロジックを保持したパーツ作りのアドバンテージを大いに買うべきな気がしている。\n"
    },
    {
      "author": "hctaw_srp",
      "created_at": "2021-10-02",
      "body_markdown": "そう考えると、 **JSXは「必要悪」** なのかもしれない。正直、あんまり好きでは無いんだけれども、、それは「ビュー・ロジックを分離させる」が根本にあるがゆえの感情でもあることもまた事実",
      "body_updated_at": "2021-10-02"
    }
  ]
}